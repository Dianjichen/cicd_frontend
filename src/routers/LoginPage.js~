// src/routers/LoginPage.js
import React, { useState } from 'react';
import axios from 'axios';

function LoginPage() {
  const [isRegisterMode, setIsRegisterMode] = useState(false);
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');

  const handleLogin = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.request({
        method: 'post',
        url: '/user/login/',
        data: { username, password }
      });
      localStorage.setItem('token', response.data.token);
      window.location.href = '/';
    } catch (error) {
      console.error('Login failed', error);
    }
  };

  const handleRegister = async (e) => {
    e.preventDefault();
    try {
      await axios.request({
        method: 'post',
        url: '/user/register/',
        data: { username, password }
      });
      setIsRegisterMode(false);
    } catch (error) {
      console.error('Registration failed', error);
    }
  };

  return (
    <div>
      <h2>{isRegisterMode ? 'Register' : 'Login'}</h2>
      <form onSubmit={isRegisterMode ? handleRegister : handleLogin}>
        <div>
          <label htmlFor="username">Username</label>
          <input
            type="text"
            id="username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          />
        </div>
        <div>
          <label htmlFor="password">Password</label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
        </div>
        {isRegisterMode && (
          <div>
            <label htmlFor="confirmPassword">Password</label>
            <input
              type="password"
              id="confirmPassword"
              value={confirmPassword}
              onChange={(e) => setConfirmPassword(e.target.value)}
            />
          </div>
        )}
        {isRegisterMode ? (
          <>
            <button type="submit">Register</button>
            <button type="button" onClick={() => setIsRegisterMode(false)}>Back to Login</button>
          </>
        ) : (
          <>
            <button type="submit">Login</button>
            <button type="button" onClick={() => setIsRegisterMode(true)}>Sign Up</button>
          </>
        )}
      </form>
    </div>
  );
}

export default LoginPage;